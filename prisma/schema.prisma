datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "training_management", "auth"]
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

// Enum cho loại vai trò của person
enum PersonRoleType {
  ATHLETE     // Vận động viên
  COACH       // Huấn luyện viên
  OTHER       // Khác

  @@schema("training_management")
}

// Role của nhân sự (vai trò trong đợt tập trung)
model PersonRole {
  id          Int             @id @default(autoincrement())
  name        String          @unique    // Tên vai trò (Vận động viên, Huấn luyện viên, Bác sĩ...)
  type        PersonRoleType  // Loại vai trò 
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  assignments PersonOnConcentration[] // Relation với bảng trung gian

  @@schema("training_management")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String
  roleId    Int
  role      Allcode   @relation(fields: [roleId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  profile   Profile?
  concentrations Concentration[]
  trainings    Training[]
  papers     Paper[]

  @@schema("auth")
}

model Profile {
  id        Int      @id @default(autoincrement())
  phone     String?
  address   String?
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])

  @@schema("auth")
}

model Allcode {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  value     String
  type      String
  users     User[]

  @@unique([value, type])
  @@schema("training_management")
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique

  @@schema("training_management")
}

model Sport {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  teams       Team[]

  @@schema("training_management")
}

model Team {
  id            Int             @id @default(autoincrement())
  sportId       Int
  sport         Sport           @relation(fields: [sportId], references: [id])
  type          TeamType        
  room          ManagementRoom  
  gender        TeamGender      @default(MIXED)
  concentrations Concentration[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  @@unique([sportId, type, gender])
  @@index([sportId])
  @@schema("training_management")
}

enum TeamGender {
  MALE    // Nam
  FEMALE  // Nữ
  MIXED   // Cả nam và nữ

  @@schema("training_management")
}

enum TeamType {
  JUNIOR      // Trẻ
  ADULT       // Tuyển
  DISABILITY  // Khuyết tật

  @@schema("training_management")
}

enum ManagementRoom {
  ROOM_1  // Vụ 1
  ROOM_2  // Vụ 2
  ROOM_3  // Thể thao cho mọi người

  @@schema("training_management")
}

model Paper {
  id            Int      @id @default(autoincrement())
  number        Int
  code          String
  publisher     String
  type          String
  content       String
  related_year  Int
  date          DateTime
  file_name     String?  // Tên file gốc
  file_path     String?  // Đường dẫn lưu file
  submitter_id  Int?      
  submitter     User?     @relation(fields: [submitter_id], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  concentrations PaperOnConcentration[] // Relation với bảng trung gian

  @@schema("training_management")
}

model Concentration {
  id              Int       @id @default(autoincrement())
  teamId          Int      // Đội tập trung
  team            Team     @relation(fields: [teamId], references: [id])
  location        String    // Địa điểm tập trung
  related_year    Int       // Năm liên quan
  sequence_number Int       // Lần thứ mấy trong năm
  startDate       DateTime  // Ngày bắt đầu tập trung
  endDate         DateTime  // Ngày kết thúc tập trung
  note            String    // Ghi chú
  submitter_id    Int       // Người tạo thông tin
  submitter       User      @relation(fields: [submitter_id], references: [id])
  trainings       Training[] // Các đợt tập huấn trong thời gian tập trung
  papers          PaperOnConcentration[] // Relation với bảng trung gian
  participants    PersonOnConcentration[] // Thêm relation field này
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@index([teamId])
  @@schema("training_management")
}

model Training {
  id              Int           @id @default(autoincrement())
  location        String        // Địa điểm tập huấn
  startDate       DateTime      // Ngày bắt đầu tập huấn
  endDate         DateTime      // Ngày kết thúc tập huấn
  note            String        // Ghi chú
  concentration_id Int          // Thuộc đợt tập trung nào
  concentration   Concentration @relation(fields: [concentration_id], references: [id])
  submitter_id    Int          // Người tạo thông tin
  submitter       User         @relation(fields: [submitter_id], references: [id])
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  @@schema("training_management")
}

// Bảng trung gian
model PaperOnConcentration {
  paper_id         Int
  concentration_id Int
  assignedAt       DateTime @default(now())
  assignedBy       Int      // ID của user thực hiện gán
  paper            Paper    @relation(fields: [paper_id], references: [id])
  concentration    Concentration @relation(fields: [concentration_id], references: [id])

  @@id([paper_id, concentration_id])
  @@schema("training_management")
}

model Person {
  id                Int       @id @default(autoincrement())
  name              String    // Tên
  identity_number   String?   // Số CCCD/CMND
  identity_date     DateTime? // Ngày cấp CCCD/CMND
  identity_place    String?   // Nơi cấp CCCD/CMND
  social_insurance  String?   // Mã số BHXH
  birthday         DateTime? // Ngày sinh
  gender           String    // Giới tính
  phone            String?   // Số điện thoại
  email            String?   // Email
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  participations   PersonOnConcentration[] // Quan hệ với bảng trung gian

  @@schema("training_management")
}

// Loại đơn vị trực thuộc
enum AffiliationType {
  PROVINCE    // Tỉnh/Thành phố
  CENTER      // Trung tâm Huấn luyện
  OTHER       // Khác

  @@schema("training_management")
}

// Bảng đơn vị trực thuộc
model Affiliation {
  id          Int             @id @default(autoincrement())
  name        String          // Tên đơn vị (Hà Nội, TTHL TDTT Quốc gia...)
  type        AffiliationType // Loại đơn vị
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  assignments PersonOnConcentration[] // Relation với bảng trung gian

  @@unique([name, type])
  @@schema("training_management")
}

model PersonOnConcentration {
  id              Int           @id @default(autoincrement())
  person_id       Int           // ID của người tham gia
  concentration_id Int          // ID của đợt tập trung
  role_id         Int          // ID của vai trò
  startDate       DateTime      // Ngày bắt đầu tham gia (mặc định là ngày bắt đầu của concentration)
  endDate         DateTime      // Ngày kết thúc tham gia (mặc định là ngày kết thúc của concentration)
  note            String?       // Ghi chú (lý do thêm/bớt)
  assignedBy      Int          // Người thực hiện thao tác
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  person          Person       @relation(fields: [person_id], references: [id])
  concentration   Concentration @relation(fields: [concentration_id], references: [id])
  role            PersonRole   @relation(fields: [role_id], references: [id])
  affiliation_id  Int          // ID của đơn vị trực thuộc
  affiliation     Affiliation  @relation(fields: [affiliation_id], references: [id])

  @@index([startDate, endDate])
  @@index([concentration_id])
  @@index([affiliation_id])
  @@schema("training_management")
}
