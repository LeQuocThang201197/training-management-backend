datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "training_management", "auth"]
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String
  roleId    Int
  role      Allcode   @relation(fields: [roleId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  profile   Profile?
  recruitments Recruitment[]

  @@schema("auth")
}

model Profile {
  id        Int      @id @default(autoincrement())
  phone     String?
  address   String?
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])

  @@schema("auth")
}

model Allcode {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  value     String
  type      String
  users     User[]

  @@unique([value, type])
  @@schema("training_management")
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique

  @@schema("training_management")
}

model Sport {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  teams       Team[]

  @@schema("training_management")
}

model Team {
  id          Int             @id @default(autoincrement())
  sportId     Int
  sport       Sport           @relation(fields: [sportId], references: [id])
  type        TeamType        
  room        ManagementRoom  
  gender      TeamGender      @default(MIXED)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@unique([sportId, type, gender])
  @@schema("training_management")
}

enum TeamGender {
  MALE    // Nam
  FEMALE  // Nữ
  MIXED   // Cả nam và nữ

  @@schema("training_management")
}

enum TeamType {
  JUNIOR      // Trẻ
  ADULT       // Tuyển
  DISABILITY  // Khuyết tật

  @@schema("training_management")
}

enum ManagementRoom {
  ROOM_1  // Vụ 1
  ROOM_2  // Vụ 2
  ROOM_3  // Thể thao cho mọi người

  @@schema("training_management")
}

model Paper {
  id            Int      @id @default(autoincrement())
  number        Int
  code          String
  publisher     String
  type          String
  content       String
  related_year  Int
  date          DateTime
  file_name     String?  // Tên file gốc
  file_path     String?  // Đường dẫn lưu file
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@schema("training_management")
}

model Recruitment {
  id        Int      @id @default(autoincrement())
  name      String
  location  String
  startDate DateTime
  endDate   DateTime
  note      String
  submitter_id  Int
  submitter   User @relation(fields: [submitter_id], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("training_management")
}
